
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
}


enum OrderStatus {
  deliveryed
  delivery
  waitingPayment
}
enum PaymentMethod {
  pix
  money
  credit
  debit
}

enum ItemsType {
id
qtd
}

model Photos{
  id Int @id() @default(autoincrement())
  prodId Int
  imgBase64 String
  Products Products @relation(fields: [prodId] ,references: [id], onDelete: Cascade)
}

model Products{
  id Int @id() @default(autoincrement())
  title String
  price String
  description String?
  type String
  qtdStock Int
  createdAt DateTime @default(now())
  isNewsLister Boolean
  categoryId Int

  Photos Photos[]
  Categorys Categorys @relation(fields: [categoryId],references: [id])
  
  @@index([id])
  @@map("Products")
}

model Categorys {
  id Int @id() @unique() @default(autoincrement())
  name String
  createdAt DateTime @default(now())
  Products Products[]
  @@index([id])
}


model Users{
  id Int @id() @unique() @default(autoincrement()) 
  createdAt DateTime @default(now())
  name String
  email String
  phone String
  address String
  zipCode String
  Orders Orders[]
  @@index([id])
}


model Orders{
  id Int @id() @unique() @default(autoincrement())
  createdAt DateTime @default(now())
  // product ids and qtd =  [{id, qtd}]
  items Json[]
  total String 
  isDeliveryed Boolean @default(false)
  paymentMethod  PaymentMethod
  userId Int
  status OrderStatus
  Users Users @relation(fields: [userId],references: [id])

  @@index([id])
}