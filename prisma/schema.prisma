// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


enum OrderStatus {
  deliveryed
  delivery
  waitingPayment
}
enum PaymentMethod {
  pix
  money
  credit
  debit
}


model Products{
  id String @id() @unique() @default(cuid()) 
  title String
  price String
  type String
  imgUrl String
  qtdStock Int
  createdAt DateTime @default(now())
  categoryId Int

  Categorys Categorys @relation(fields: [categoryId],references: [id])
  
  @@index([id])
  @@map("Products")
}

model Categorys {
  id Int @id() @unique() @default(autoincrement())
  name String
  createdAt DateTime @default(now())
  Products Products[]
  @@index([id])
}


model Users{
  id String @id() @unique() @default(cuid()) 
  createdAt DateTime @default(now())
  name String
  email String
  phone String
  address String
  zipCode String

  Orders Orders[]
  @@index([id])
}


model Orders{
  id String @id() @unique() @default(cuid()) 
  createdAt DateTime @default(now())
  // product ids
  items String[]
  total String 
  isDeliveryed Boolean @default(false)
  paymentMethod  PaymentMethod
  userId String
  status OrderStatus

  Users Users @relation(fields: [userId],references: [id])

  @@index([id])
}